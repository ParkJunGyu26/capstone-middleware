name: CI/CD Pipeline to EC2

on:
  push:
    branches:
      - develop

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Cache
        id: cache-setup
        run: echo "::set-output name=date::$(date +%Y-%m-%d)"

  build_and_push:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ needs.prepare.outputs.date }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        run: npm ci

      - name: Build and test
        run: npm run build

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/kau-capstone:latest
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

  deploy_to_ec2:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Deploying to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          password: ${{ secrets.AWS_PASSWORD }}
          script: |
            # Pull the latest image
            docker pull ${{ secrets.DOCKER_USERNAME }}/kau-capstone:latest

            # Stop and remove any existing container named 'web'
            if docker ps -q --filter "name=web"; then
              docker stop web
              docker rm web
            fi

            # Run the new container with the environment variable
            docker run -d --name web -p 3000:3000 -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} ${{ secrets.DOCKER_USERNAME }}/kau-capstone:latest
